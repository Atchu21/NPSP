<apex:page controller="GE_PaymentServices" showHeader="false" applyHtmlTag="true"
           applyBodyTag="false">

    <head>
        <apex:slds />
    </head>

    <article class='slds-scope'>
        <form onsubmit="handleForm(event)">
            <div id="payments"></div>
        </form>
    </article>
    
    <!--TODO - remove once elevate can process the gateway id-->
    <!-- for QE: to display visually the gateway id when it's passed to tokenize method -->
    <article class='slds-scope'>
        <div><small><span id="gatewayInfo"></span></small></div>
    </article>

    <script src="{!elevateSDKURL}"></script>
    <script>
        const hostname = window.location.hostname;
        const arr = hostname.split(".");
        let domain = arr[0].replace('--npsp', '');
        domain = domain.replace('--c', '');
        const lightningOrigin = `https://${domain}.lightning.force.com`;

        const sfdo = new sfdoPaymentsJsSdk();
        sfdo.mount({
            id: 'payments',
            clientId: '{!productId}',
            gatewayId: '{!gatewayIds}',
            designSystem: 'Lightning',
            styles: '' +
                '.logo {' +
                    'left: 8px !important;' +
                '}' +
                '.fieldset.cc-number {' +
                    'padding-left: 0;' +
                    'padding-right: 1rem;' +
                '}' +
                '.fieldset.exp {' +
                    'padding-left: 0;' +
                    'padding-right: 1rem;' +
                '}' +
                '.fieldset.cvc {' +
                    'padding: 0;' +
                '}'
        })
        .then(() => {
            isLoaded();

            setTimeout(function() {
                isLoaded();
            }, 3000);
        });

        function isLoaded() {
            const message = JSON.stringify({ isLoaded: true });
            postMessage(message);
        }

        // TODO - remove once elevate can process the gateway id
        // for QE: display the gateway id visually as it's been passed to tokenize
        function showGatewayIdForTesting(gatewayId) {
            let gatewayIdDisplay = gatewayId;
            if (gatewayId.includes('-')) {
                let gatewayIdParts = gatewayId.split('-');
                gatewayIdDisplay = gatewayIdParts[gatewayIdParts.length - 1];
            }
            document.getElementById('gatewayInfo').textContent = `Gateway Id: ****-${gatewayIdDisplay}`;
        }

        /*******************************************************************************
        * @description Method listens for messages from geFormWidgetTokenizeCard
        */
        window.onmessage = function (event) {
            if (event && event.origin !== lightningOrigin) {
                // Reject any messages from an unexpected origin
                return;
            } else if (event.data && event.data.action === 'createToken') {
                // TODO - remove once elevate can process the gateway id
                showGatewayIdForTesting('{!gatewayIds}');

                handleTokenCreation();
            }
        }

        /*******************************************************************************
        * @description Creates a token and posts the response to geFormWidgetTokenizeCard
        */
        function handleTokenCreation() {
            sfdo
                .createToken({
                    nameOnCard: 'test name'
                })
                .then(function response(resp) {
                    // Send token to lwc
                    const token = resp.token;
                    const successString = JSON.stringify({ token: token });
                    postMessage(successString);
                })
                .catch(function handleError(err) {
                    // Send error to lwc
                    const errorString = JSON.stringify(err);
                    postMessage(errorString);
                });
        }

        /*******************************************************************************
        * @description Posts messages to geFormWidgetTokenizeCard
        *
        * @param {string} message: String to pass to geFormWidgetTokenizeCard
        */
        function postMessage(message) {
            window.top.postMessage(message, lightningOrigin);
        }
    </script>

</apex:page>